# --- HTTP Server ---
quarkus.http.port=8082
%dev.quarkus.http.cors.enabled=false
# --- JSON / Jackson ---
quarkus.jackson.property-naming-strategy=SNAKE_CASE
# --- Database ---
quarkus.datasource.db-kind=h2
quarkus.datasource.jdbc.url=jdbc:h2:./.local-db/statistics
quarkus.datasource.username=sa
quarkus.datasource.password=sa
# --- Hibernate / ORM ---
quarkus.hibernate-orm.schema-management.strategy=update
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.log.format-sql=true
# --- Kafka ---
kafka.bootstrap.servers=localhost:9092
quarkus.kafka.devservices.enabled=false
mp.messaging.incoming.customers.connector=smallrye-kafka
%test.mp.messaging.incoming.customers.connector=smallrye-in-memory
mp.messaging.incoming.customers.topic=customer-events
# doesn't matter when we only have one @Incoming in our code
mp.messaging.incoming.customers.broadcast=true
mp.messaging.incoming.customers.group.id=customer-statistics
mp.messaging.incoming.customers.key.deserializer=org.apache.kafka.common.serialization.UUIDDeserializer
mp.messaging.incoming.customers.value.deserializer=de.sample.schulung.statistics.kafka.CustomerEventRecordDeserializer
# earliest or latest
# latest is default
mp.messaging.incoming.customers.auto.offset.reset=earliest
